# Generated by Django 5.0 on 2024-01-08 13:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('tutor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deactivateByClient', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('others', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(max_length=15, null=True, unique=True)),
                ('state_of_residence', models.CharField(max_length=50, null=True)),
                ('nationality', models.CharField(max_length=50, null=True)),
                ('profile_picture', models.ImageField(default='default_user_icon.png', upload_to='profile_picture/Client', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('residential_address', models.CharField(max_length=150, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gender', models.CharField(choices=[('-- select --', '-- select --'), ('Male', 'Male'), ('Female', 'Female')], default='-- select --', max_length=20, null=True)),
                ('educational_level', models.CharField(choices=[('-- select --', '-- select --'), ('Primary', 'Primary'), ('Secondary', 'Secondary'), ('Tertiary', 'Tertiary'), ('Others', 'Others')], default='-- select --', max_length=200, null=True)),
                ('specific_educational_level', models.CharField(choices=[('choose educational level', 'choose educational level'), ('Primary 1', 'Primary 1'), ('Primary 2', 'Primary 2'), ('Primary 3', 'Primary 3'), ('Primary 4', 'Primary 4'), ('Primary 5', 'Primary 5'), ('Primary 6', 'Primary 6'), ('JSS 1', 'JSS 1'), ('JSS 2', 'JSS 2'), ('JSS 3', 'JSS 3'), ('SSS 1', 'SSS 1'), ('SSS 2', 'SSS 2'), ('SSS 3', 'SSS 3'), ('University 100L', 'University 100L'), ('University 200L', 'University 200L'), ('University 300L', 'University 300L'), ('University 400L', 'University 400L'), ('University 500L', 'University 500L'), ('ND 1', 'ND 1'), ('ND 2', 'ND 2'), ('HND 1', 'HND 1'), ('HND 2', 'HND 2'), ('Masters', 'Masters'), ('PgD', 'PgD'), ('PhD', 'PhD'), ('Others', 'Others')], default='choose educational level', max_length=200, null=True)),
                ('prefered_channel', models.CharField(choices=[('-- select --', '-- select --'), ('Online', 'Online'), ('Physical', 'Physical'), ('Hybrid', 'Hybrid')], default='-- select --', max_length=20, null=True)),
                ('prefered_language', models.CharField(choices=[('-- select --', '-- select --'), ('English', 'English'), ('French', 'French'), ('Spanish', 'Spanish'), ('Igbo', 'Igbo'), ('Yoruba', 'Yoruba'), ('Hausa', 'Hausa')], default='-- select --', max_length=200, null=True)),
                ('prefered_tutor_gender', models.CharField(choices=[('-- select --', '-- select --'), ('Male', 'Male'), ('Female', 'Female'), ('Any', 'Any')], default='-- select --', max_length=20, null=True)),
                ('is_suspended_admin', models.BooleanField(default=False)),
                ('is_blocked_admin', models.BooleanField(default=False)),
                ('suspended_at_admin', models.DateTimeField(blank=True, null=True)),
                ('blocked_at_admin', models.DateTimeField(blank=True, null=True)),
                ('suspension_duration_admin', models.IntegerField(default=0, null=True)),
                ('suspension_reason_admin', models.TextField(blank=True, null=True)),
                ('block_reason_admin', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='client_groups', to='auth.group')),
                ('tutor', models.ManyToManyField(related_name='engaged_tutor', to='tutor.tutor')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='client_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_validity', models.DateTimeField(null=True)),
                ('contract_validated_start_date', models.DateTimeField(null=True)),
                ('contract_validity_end_date', models.DateTimeField(null=True)),
                ('target_tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selling_tutor', to='tutor.tutor')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carts', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tnx_id', models.CharField(max_length=200, null=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_id', models.CharField(max_length=200, null=True)),
                ('payment_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_receipts', to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_number', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rankings', to='client.client')),
                ('tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rankings', to='tutor.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_subject', models.CharField(max_length=100, null=True)),
                ('review_text', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='client.client')),
                ('tutor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='tutor.tutor')),
            ],
        ),
    ]
